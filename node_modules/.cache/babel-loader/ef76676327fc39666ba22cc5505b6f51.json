{"ast":null,"code":"var _jsxFileName = \"/Users/saidyein/Desktop/HYF/movieapp/src/components/pages/NewMoviePage.js\";\n//Created by [rcredux] snippet\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport NewMovieForm from '../NewMovieForm';\nimport { addNewMovie, getMovie, updateMovie } from '../../actions/moviesAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class NewMoviePage extends Component {\n  componentDidMount() {\n    const {\n      match\n    } = this.props;\n\n    if (!this.props.movie && match.params.id) {\n      this.props.getMovie(match.params.id);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Add New Movie Page\", /*#__PURE__*/_jsxDEV(NewMovieForm, {\n        done: this.props.newmovieReducer.done,\n        errorText: this.props.newmovieReducer.error,\n        loading: this.props.newmovieReducer.loading,\n        addNewMovie: this.props.addNewMovie,\n        updateMovie: this.props.updateMovie,\n        movie: this.props.movie,\n        gotMovie: this.props.newmovieReducer.gotMovie\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = ({\n  newmovieReducer,\n  moviesReducer\n}, props) => {\n  return {\n    newmovieReducer,\n    movie: moviesReducer.movies.find(item => item.id === props.match.params.id)\n  };\n};\n\nconst mapDispatchToProps = {\n  addNewMovie,\n  getMovie,\n  updateMovie\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(NewMoviePage);","map":{"version":3,"sources":["/Users/saidyein/Desktop/HYF/movieapp/src/components/pages/NewMoviePage.js"],"names":["React","Component","connect","NewMovieForm","addNewMovie","getMovie","updateMovie","NewMoviePage","componentDidMount","match","props","movie","params","id","render","newmovieReducer","done","error","loading","gotMovie","mapStateToProps","moviesReducer","movies","find","item","mapDispatchToProps"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,SAASC,WAAT,EAAqBC,QAArB,EAA8BC,WAA9B,QAAiD,4BAAjD;;AAEA,OAAO,MAAMC,YAAN,SAA2BN,SAA3B,CAAqC;AACxCO,EAAAA,iBAAiB,GAAG;AACjB,UAAM;AAACC,MAAAA;AAAD,QAAU,KAAKC,KAArB;;AACA,QAAI,CAAC,KAAKA,KAAL,CAAWC,KAAZ,IAAqBF,KAAK,CAACG,MAAN,CAAaC,EAAtC,EAA0C;AACtC,WAAKH,KAAL,CAAWL,QAAX,CAAoBI,KAAK,CAACG,MAAN,CAAaC,EAAjC;AACH;AACH;;AAGDC,EAAAA,MAAM,GAAG;AACL,wBACE;AAAA,oDAEE,QAAC,YAAD;AACE,QAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWK,eAAX,CAA2BC,IADnC;AAEE,QAAA,SAAS,EAAE,KAAKN,KAAL,CAAWK,eAAX,CAA2BE,KAFxC;AAGE,QAAA,OAAO,EAAE,KAAKP,KAAL,CAAWK,eAAX,CAA2BG,OAHtC;AAIE,QAAA,WAAW,EAAE,KAAKR,KAAL,CAAWN,WAJ1B;AAKE,QAAA,WAAW,EAAE,KAAKM,KAAL,CAAWJ,WAL1B;AAME,QAAA,KAAK,EAAE,KAAKI,KAAL,CAAWC,KANpB;AAOE,QAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWK,eAAX,CAA2BI;AAPvC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAcH;;AAxBuC;;AA0B5C,MAAMC,eAAe,GAAG,CAAC;AAACL,EAAAA,eAAD;AAAiBM,EAAAA;AAAjB,CAAD,EAAiCX,KAAjC,KAA2C;AACnE,SAAO;AAACK,IAAAA,eAAD;AACHJ,IAAAA,KAAK,EAACU,aAAa,CAACC,MAAd,CACGC,IADH,CACQC,IAAI,IAAEA,IAAI,CAACX,EAAL,KAAYH,KAAK,CAACD,KAAN,CAAYG,MAAZ,CAAmBC,EAD7C;AADH,GAAP;AAGC,CAJD;;AAMA,MAAMY,kBAAkB,GAAG;AACnBrB,EAAAA,WADmB;AACPC,EAAAA,QADO;AACEC,EAAAA;AADF,CAA3B;AAIA,eAAeJ,OAAO,CAACkB,eAAD,EAAkBK,kBAAlB,CAAP,CAA6ClB,YAA7C,CAAf","sourcesContent":["//Created by [rcredux] snippet\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport NewMovieForm from '../NewMovieForm'\nimport { addNewMovie,getMovie,updateMovie } from '../../actions/moviesAction';\n\nexport class NewMoviePage extends Component {\n    componentDidMount() {\n       const {match} = this.props;\n       if (!this.props.movie && match.params.id) {\n           this.props.getMovie(match.params.id);\n       } \n    }\n    \n    \n    render() {\n        return (\n          <div>\n            Add New Movie Page\n            <NewMovieForm\n              done={this.props.newmovieReducer.done}\n              errorText={this.props.newmovieReducer.error}\n              loading={this.props.newmovieReducer.loading}\n              addNewMovie={this.props.addNewMovie}\n              updateMovie={this.props.updateMovie}\n              movie={this.props.movie}\n              gotMovie={this.props.newmovieReducer.gotMovie}\n            />\n          </div>\n        );\n    }\n}\nconst mapStateToProps = ({newmovieReducer,moviesReducer},props) => {\nreturn {newmovieReducer,\n    movie:moviesReducer.movies\n            .find(item=>item.id === props.match.params.id)}\n}\n\nconst mapDispatchToProps = {\n        addNewMovie,getMovie,updateMovie\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewMoviePage)\n\n"]},"metadata":{},"sourceType":"module"}