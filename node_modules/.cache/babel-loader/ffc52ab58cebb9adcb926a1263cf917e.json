{"ast":null,"code":"//Created by [rxreducer] snippet\nimport { ADD_MOVIES_FULFILLED, ADD_MOVIES_PENDING, ADD_MOVIES_REJECTED, GET_MOVIE_FULFILLED, GET_MOVIE_PENDING, GET_MOVIE_REJECTED, UPDATE_MOVIE_FULFILLED, UPDATE_MOVIE_PENDING, UPDATE_MOVIE_REJECTED } from \"../actions/moviesAction\";\nconst initialState = {\n  movies: [],\n  error: {},\n  loading: false,\n  done: false,\n  gotMovie: {}\n};\nexport default ((state = initialState, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    //type==ADD_MOVIES\n    case ADD_MOVIES_PENDING:\n      return { ...state,\n        loading: true,\n        done: false\n      };\n\n    case ADD_MOVIES_FULFILLED:\n      return { ...state,\n        movies: payload,\n        loading: false,\n        done: true\n      };\n\n    case ADD_MOVIES_REJECTED:\n      return { ...state,\n        error: payload,\n        loading: false,\n        done: false\n      };\n    //type==UPDATE_MOVIE\n\n    case UPDATE_MOVIE_PENDING:\n      return { ...state,\n        loading: true,\n        done: false\n      };\n\n    case UPDATE_MOVIE_FULFILLED:\n      return { ...state,\n        movies: payload,\n        loading: false,\n        done: true\n      };\n\n    case UPDATE_MOVIE_REJECTED:\n      return { ...state,\n        error: payload,\n        loading: false,\n        done: false\n      };\n    //type== GET_MOVIE \n\n    case GET_MOVIE_PENDING:\n      return { ...state,\n        loading: true,\n        done: false\n      };\n\n    case GET_MOVIE_FULFILLED:\n      return { ...state,\n        gotMovie: payload,\n        loading: false,\n        done: true\n      };\n\n    case GET_MOVIE_REJECTED:\n      return { ...state,\n        error: payload,\n        loading: false,\n        done: false\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/saidyein/Desktop/HYF/movieapp/src/reducers/newmovieReducer.js"],"names":["ADD_MOVIES_FULFILLED","ADD_MOVIES_PENDING","ADD_MOVIES_REJECTED","GET_MOVIE_FULFILLED","GET_MOVIE_PENDING","GET_MOVIE_REJECTED","UPDATE_MOVIE_FULFILLED","UPDATE_MOVIE_PENDING","UPDATE_MOVIE_REJECTED","initialState","movies","error","loading","done","gotMovie","state","type","payload"],"mappings":"AAAA;AAEA,SAASA,oBAAT,EAA8BC,kBAA9B,EAAiDC,mBAAjD,EACIC,mBADJ,EACwBC,iBADxB,EAC0CC,kBAD1C,EAEIC,sBAFJ,EAE2BC,oBAF3B,EAEgDC,qBAFhD,QAE6E,yBAF7E;AAII,MAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAC,EADU;AACPC,EAAAA,KAAK,EAAC,EADC;AACEC,EAAAA,OAAO,EAAC,KADV;AACgBC,EAAAA,IAAI,EAAC,KADrB;AAC2BC,EAAAA,QAAQ,EAAC;AADpC,CAArB;AAIA,gBAAe,CAACC,KAAK,GAAGN,YAAT,EAAuB;AAAEO,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAvB,KAA6C;AACxD,UAAQD,IAAR;AACI;AACA,SAAKf,kBAAL;AACI,aAAO,EAAE,GAAGc,KAAL;AAAWH,QAAAA,OAAO,EAAC,IAAnB;AAAwBC,QAAAA,IAAI,EAAC;AAA7B,OAAP;;AACJ,SAAKb,oBAAL;AACI,aAAO,EAAE,GAAGe,KAAL;AAAWL,QAAAA,MAAM,EAACO,OAAlB;AAA0BL,QAAAA,OAAO,EAAC,KAAlC;AAAwCC,QAAAA,IAAI,EAAC;AAA7C,OAAP;;AACJ,SAAKX,mBAAL;AACI,aAAO,EAAE,GAAGa,KAAL;AAAWJ,QAAAA,KAAK,EAACM,OAAjB;AAAyBL,QAAAA,OAAO,EAAC,KAAjC;AAAuCC,QAAAA,IAAI,EAAC;AAA5C,OAAP;AACJ;;AACA,SAAKN,oBAAL;AACI,aAAO,EAAE,GAAGQ,KAAL;AAAWH,QAAAA,OAAO,EAAC,IAAnB;AAAwBC,QAAAA,IAAI,EAAC;AAA7B,OAAP;;AACJ,SAAKP,sBAAL;AACI,aAAO,EAAE,GAAGS,KAAL;AAAWL,QAAAA,MAAM,EAACO,OAAlB;AAA0BL,QAAAA,OAAO,EAAC,KAAlC;AAAwCC,QAAAA,IAAI,EAAC;AAA7C,OAAP;;AACJ,SAAKL,qBAAL;AACI,aAAO,EAAE,GAAGO,KAAL;AAAWJ,QAAAA,KAAK,EAACM,OAAjB;AAAyBL,QAAAA,OAAO,EAAC,KAAjC;AAAuCC,QAAAA,IAAI,EAAC;AAA5C,OAAP;AAEJ;;AACA,SAAKT,iBAAL;AACI,aAAO,EAAE,GAAGW,KAAL;AAAWH,QAAAA,OAAO,EAAC,IAAnB;AAAwBC,QAAAA,IAAI,EAAC;AAA7B,OAAP;;AACJ,SAAKV,mBAAL;AACI,aAAO,EAAE,GAAGY,KAAL;AAAWD,QAAAA,QAAQ,EAACG,OAApB;AAA4BL,QAAAA,OAAO,EAAC,KAApC;AAA0CC,QAAAA,IAAI,EAAC;AAA/C,OAAP;;AACJ,SAAKR,kBAAL;AACI,aAAO,EAAE,GAAGU,KAAL;AAAWJ,QAAAA,KAAK,EAACM,OAAjB;AAAyBL,QAAAA,OAAO,EAAC,KAAjC;AAAuCC,QAAAA,IAAI,EAAC;AAA5C,OAAP;;AAGR;AACI,aAAOE,KAAP;AA1BJ;AA4BH,CA7BD","sourcesContent":["//Created by [rxreducer] snippet\n\nimport { ADD_MOVIES_FULFILLED,ADD_MOVIES_PENDING,ADD_MOVIES_REJECTED,\n    GET_MOVIE_FULFILLED,GET_MOVIE_PENDING,GET_MOVIE_REJECTED,\n    UPDATE_MOVIE_FULFILLED,UPDATE_MOVIE_PENDING,UPDATE_MOVIE_REJECTED } from \"../actions/moviesAction\";\n    \n    const initialState = {\n        movies:[],error:{},loading:false,done:false,gotMovie:{}\n    }\n    \n    export default (state = initialState, { type, payload }) => {\n        switch (type) {\n            //type==ADD_MOVIES\n            case ADD_MOVIES_PENDING:\n                return { ...state,loading:true,done:false }\n            case ADD_MOVIES_FULFILLED:\n                return { ...state,movies:payload,loading:false,done:true }\n            case ADD_MOVIES_REJECTED:\n                return { ...state,error:payload,loading:false,done:false }\n            //type==UPDATE_MOVIE\n            case UPDATE_MOVIE_PENDING:\n                return { ...state,loading:true,done:false }\n            case UPDATE_MOVIE_FULFILLED:\n                return { ...state,movies:payload,loading:false,done:true }\n            case UPDATE_MOVIE_REJECTED:\n                return { ...state,error:payload,loading:false,done:false }\n    \n            //type== GET_MOVIE \n            case GET_MOVIE_PENDING:\n                return { ...state,loading:true,done:false }\n            case GET_MOVIE_FULFILLED:\n                return { ...state,gotMovie:payload,loading:false,done:true }\n            case GET_MOVIE_REJECTED:\n                return { ...state,error:payload,loading:false,done:false }\n    \n                \n        default:\n            return state\n        }\n    }\n    "]},"metadata":{},"sourceType":"module"}