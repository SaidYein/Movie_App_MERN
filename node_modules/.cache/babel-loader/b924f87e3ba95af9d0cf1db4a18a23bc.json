{"ast":null,"code":"var _jsxFileName = \"/Users/saidyein/Desktop/HYF/movieapp/src/components/NewMovieForm.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { Button, Image, Form, Input, Message } from \"semantic-ui-react\";\nimport { Redirect, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewMovieForm = ({\n  addNewMovie,\n  updateMovie,\n  loading,\n  errorText,\n  done,\n  movie,\n  gotMovie\n}) => {\n  _s();\n\n  const params = useParams();\n\n  const _id = movie ? movie.id : params.id;\n\n  const [title, setTitle] = useState(movie ? movie.title : \"\");\n  const [cover, setCover] = useState(movie ? movie.cover : \"\");\n  const [error, setError] = useState({});\n  const [submitStatus, setSubmitStatus] = useState(false);\n  useEffect(() => {\n    if (gotMovie && gotMovie.title) {\n      setTitle(gotMovie.title);\n      setCover(gotMovie.cover);\n    }\n  }, [gotMovie]);\n\n  const onFormSubmit = () => {\n    const errMessages = {};\n\n    if (!title) {\n      errMessages.title = \"Title can't be blank.\";\n    }\n\n    if (!cover) {\n      errMessages.cover = \"Cover can't be blank.\";\n    }\n\n    setError(errMessages);\n\n    if (Object.keys(errMessages).length === 0) {\n      if (!_id) {\n        addNewMovie({\n          title,\n          cover\n        });\n      } else {\n        updateMovie({\n          _id,\n          title,\n          cover\n        });\n      }\n\n      setSubmitStatus(true);\n    }\n  };\n\n  const formData = /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: onFormSubmit,\n    loading: loading,\n    children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n      control: Input,\n      label: \"Title\",\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      placeholder: \"Title\",\n      error: error.title && {\n        content: error.title\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n      control: Input,\n      label: \"Cover URL\",\n      onChange: e => setCover(e.target.value),\n      value: cover,\n      placeholder: \"Cover URL\",\n      error: error.cover && {\n        content: error.cover\n      },\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n      children: /*#__PURE__*/_jsxDEV(Image, {\n        src: cover,\n        size: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      primary: true,\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), errorText.response && /*#__PURE__*/_jsxDEV(Message, {\n      negative: true,\n      children: /*#__PURE__*/_jsxDEV(Message.Header, {\n        children: errorText.response.statusText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this); // console.log(\"t:\",title);\n  /// console.log(\"c:\",cover);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: done && submitStatus ? /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 34\n    }, this) : formData\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewMovieForm, \"DXbVdBdFDX4AxmNA6Wa6JKFzUKA=\", false, function () {\n  return [useParams];\n});\n\n_c = NewMovieForm;\nexport default NewMovieForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewMovieForm\");","map":{"version":3,"sources":["/Users/saidyein/Desktop/HYF/movieapp/src/components/NewMovieForm.js"],"names":["React","useState","useEffect","Button","Image","Form","Input","Message","Redirect","useParams","NewMovieForm","addNewMovie","updateMovie","loading","errorText","done","movie","gotMovie","params","_id","id","title","setTitle","cover","setCover","error","setError","submitStatus","setSubmitStatus","onFormSubmit","errMessages","Object","keys","length","formData","e","target","value","content","response","statusText"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { Button, Image, Form, Input, Message } from \"semantic-ui-react\";\n\nimport { Redirect, useParams } from \"react-router-dom\";\n\nconst NewMovieForm = ({\n  addNewMovie,\n  updateMovie,\n  loading,\n  errorText,\n  done,\n  movie,\n  gotMovie,\n}) => {\n  const params = useParams();\n  const _id = movie ? movie.id : params.id;\n  const [title, setTitle] = useState(movie ? movie.title : \"\");\n  const [cover, setCover] = useState(movie ? movie.cover : \"\");\n  const [error, setError] = useState({});\n  const [submitStatus, setSubmitStatus] = useState(false);\n\n  useEffect(() => {\n    if (gotMovie && gotMovie.title) {\n      setTitle(gotMovie.title);\n      setCover(gotMovie.cover);\n    }\n  }, [gotMovie]);\n\n  const onFormSubmit = () => {\n    const errMessages = {};\n    if (!title) {\n      errMessages.title = \"Title can't be blank.\";\n    }\n    if (!cover) {\n      errMessages.cover = \"Cover can't be blank.\";\n    }\n\n    setError(errMessages);\n    if (Object.keys(errMessages).length === 0) {\n      if (!_id) {\n        addNewMovie({ title, cover });\n      } else {\n        updateMovie({ _id, title, cover });\n      }\n      setSubmitStatus(true);\n    }\n  };\n  const formData = (\n    <Form onSubmit={onFormSubmit} loading={loading}>\n      <Form.Field\n        control={Input}\n        label=\"Title\"\n        value={title}\n        onChange={(e) => setTitle(e.target.value)}\n        placeholder=\"Title\"\n        error={error.title && { content: error.title }}\n      />\n      <Form.Field\n        control={Input}\n        label=\"Cover URL\"\n        onChange={(e) => setCover(e.target.value)}\n        value={cover}\n        placeholder=\"Cover URL\"\n        error={error.cover && { content: error.cover }}\n        required\n      />\n\n      {/* <Form.Field error={!!error.cover}>\n    <label>Cover URL</label>\n    <input placeholder='Cover URL' value={cover} onChange={(e)=>setCover(e.target.value)}/>\n    {error.cover && <InlineError message={error.cover}/>}\n  </Form.Field> */}\n      <Form.Field>\n        <Image src={cover} size=\"small\" />\n      </Form.Field>\n      <Button primary type=\"submit\">\n        Submit\n      </Button>\n      {errorText.response && (\n        <Message negative>\n          <Message.Header>{errorText.response.statusText}</Message.Header>\n        </Message>\n      )}\n    </Form>\n  );\n\n  // console.log(\"t:\",title);\n  /// console.log(\"c:\",cover);\n  return (\n    <div>{done && submitStatus ? <Redirect to=\"/movies\" /> : formData}</div>\n  );\n};\n\nexport default NewMovieForm;\n"]},"metadata":{},"sourceType":"module"}