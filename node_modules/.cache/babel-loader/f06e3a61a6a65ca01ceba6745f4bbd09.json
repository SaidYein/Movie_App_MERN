{"ast":null,"code":"var _jsxFileName = \"/Users/saidyein/Desktop/HYF/movieapp/src/components/pages/MoviePage.js\";\n//Created by [rcredux] snippet.\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport MovieList from '../MovieList';\nimport { fetchMovies, deleteMovie } from '../../actions/moviesAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class MoviePage extends Component {\n  componentDidMount() {\n    this.props.fetchMovies();\n  }\n\n  render() {\n    //console.log(\"Props:\",this.props.moviesRe.error);\n    const errMessage = this.props.moviesRe.error.message;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: errMessage ? /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\" Error Data! \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 36\n        }, this), \" \", errMessage]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 19\n      }, this) : /*#__PURE__*/_jsxDEV(MovieList, {\n        deleteMovie: this.props.deleteMovie,\n        movies: this.props.moviesRe.movies,\n        loading: this.props.moviesRe.loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nMoviePage.propTypes = {\n  moviesRe: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = ({\n  moviesReducer\n}) => ({\n  moviesRe: moviesReducer\n});\n\nconst mapDispatchToProps = {\n  fetchMovies,\n  deleteMovie\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(MoviePage);","map":{"version":3,"sources":["/Users/saidyein/Desktop/HYF/movieapp/src/components/pages/MoviePage.js"],"names":["React","Component","connect","PropTypes","MovieList","fetchMovies","deleteMovie","MoviePage","componentDidMount","props","render","errMessage","moviesRe","error","message","movies","loading","propTypes","object","isRequired","mapStateToProps","moviesReducer","mapDispatchToProps"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,SAAQC,WAAR,EAAoBC,WAApB,QAAwC,4BAAxC;;AAEA,OAAO,MAAMC,SAAN,SAAwBN,SAAxB,CAAkC;AAKrCO,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWJ,WAAX;AACH;;AAEDK,EAAAA,MAAM,GAAG;AACV;AACC,UAAMC,UAAU,GAAG,KAAKF,KAAL,CAAWG,QAAX,CAAoBC,KAApB,CAA0BC,OAA7C;AACI,wBACI;AAAA,gBACKH,UAAU,gBACT;AAAA,iDAAiB;AAAA;AAAA;AAAA;AAAA,gBAAjB,OAAwBA,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,cADS,gBAET,QAAC,SAAD;AACF,QAAA,WAAW,EAAE,KAAKF,KAAL,CAAWH,WADtB;AAEF,QAAA,MAAM,EAAE,KAAKG,KAAL,CAAWG,QAAX,CAAoBG,MAF1B;AAGF,QAAA,OAAO,EAAE,KAAKN,KAAL,CAAWG,QAAX,CAAoBI;AAH3B;AAAA;AAAA;AAAA;AAAA;AAHN;AAAA;AAAA;AAAA;AAAA,YADJ;AAYH;;AAxBoC;AAA5BT,S,CACFU,S,GAAY;AACfL,EAAAA,QAAQ,EAACT,SAAS,CAACe,MAAV,CAAiBC;AADX,C;;AA0BvB,MAAMC,eAAe,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,MAAsB;AAC1CT,EAAAA,QAAQ,EAACS;AADiC,CAAtB,CAAxB;;AAIA,MAAMC,kBAAkB,GAAG;AAACjB,EAAAA,WAAD;AAAaC,EAAAA;AAAb,CAA3B;AAEA,eAAeJ,OAAO,CAACkB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6Cf,SAA7C,CAAf","sourcesContent":["//Created by [rcredux] snippet.\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types';\nimport MovieList from '../MovieList'\nimport {fetchMovies,deleteMovie  } from '../../actions/moviesAction';\n\nexport class MoviePage extends Component {\n    static propTypes = {\n        moviesRe:PropTypes.object.isRequired\n    }\n\n    componentDidMount() {\n        this.props.fetchMovies();\n    }\n    \n    render() {        \n   //console.log(\"Props:\",this.props.moviesRe.error);\n    const errMessage = this.props.moviesRe.error.message\n        return (\n            <div>\n                {errMessage \n                ? <h3> Error Data! <br/> {errMessage}</h3>\n                : <MovieList\n                deleteMovie={this.props.deleteMovie} \n                movies={this.props.moviesRe.movies} \n                loading={this.props.moviesRe.loading}/>\n                }\n                \n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = ({moviesReducer}) => ({\n    moviesRe:moviesReducer\n})\n\nconst mapDispatchToProps = {fetchMovies,deleteMovie }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MoviePage)"]},"metadata":{},"sourceType":"module"}